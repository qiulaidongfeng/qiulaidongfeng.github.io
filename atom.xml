<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>秋来冬风的博客</title>
    <link>https://qiulaidongfeng.github.io/</link>
    <description>Recent content on 秋来冬风的博客</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>秋来冬风</managingEditor>
    <webMaster>秋来冬风</webMaster>
    <lastBuildDate>Thu, 16 Oct 2025 18:17:20 +0800</lastBuildDate>
    <atom:link href="https://qiulaidongfeng.github.io/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimize http2 Web Server | Go standard library and runtime modifiable source code</title>
      <link>https://qiulaidongfeng.github.io/en/optimize-http2-web-server--go-standard-library-and-runtime-modifiable-source-code/</link>
      <pubDate>Thu, 16 Oct 2025 18:17:20 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/optimize-http2-web-server--go-standard-library-and-runtime-modifiable-source-code/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;p&gt;This is the third blog post in my &lt;a href=&#34;https://qiulaidongfeng.github.io/categories/%E6%88%91%E7%9A%84%E9%AB%98%E5%90%9E%E5%90%90http2%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E7%B3%BB%E5%88%97/&#34;&gt;My High-Throughput HTTP/2 Server Optimization Experience Sharing Series&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;When optimizing my HTTP/2 server written in Go, I tried modifying Go&amp;rsquo;s source code to optimize the standard library and runtime. This article shares some parts of the source code that I found could be modified.&lt;/p&gt;&#xA;&lt;p&gt;The corresponding version is the Go 1.26 development branch.&lt;/p&gt;&#xA;&lt;h2 id=&#34;nethttp-package&#34;&gt;net/http Package&lt;/h2&gt;&#xA;&lt;p&gt;Unless otherwise stated, the code to be modified is in h2_bundle.go.&lt;/p&gt;</description>
    </item>
    <item>
      <title>优化http2 Web Server 之Go标准库和运行时可修改的源代码</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E4%BC%98%E5%8C%96http2-web-server-%E4%B9%8Bgo%E6%A0%87%E5%87%86%E5%BA%93%E5%92%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%AF%E4%BF%AE%E6%94%B9%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Thu, 16 Oct 2025 14:48:58 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E4%BC%98%E5%8C%96http2-web-server-%E4%B9%8Bgo%E6%A0%87%E5%87%86%E5%BA%93%E5%92%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8F%AF%E4%BF%AE%E6%94%B9%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;这是&lt;a href=&#34;https://qiulaidongfeng.github.io/categories/%E6%88%91%E7%9A%84%E9%AB%98%E5%90%9E%E5%90%90http2%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E7%B3%BB%E5%88%97/&#34;&gt;我的高吞吐http2服务器优化经验分享系列&lt;/a&gt; 第三篇博客。&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;我在优化我的用go语言写的http2服务器时，尝试修改go的源代码对标准库和运行时进行优化，本文分享我发现的一些源代码中可以修改的部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go1.25&#39;s New CSRF (Cross Site Request Forgery) Defense API | Build a More Secure Internet</title>
      <link>https://qiulaidongfeng.github.io/en/go1.25s-new-csrf-cross-site-request-forgery-defense-api-build-a-more-secure-internet/</link>
      <pubDate>Thu, 16 Oct 2025 14:24:47 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/go1.25s-new-csrf-cross-site-request-forgery-defense-api-build-a-more-secure-internet/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;Go1.25 has been released in mid August 2025.&lt;/p&gt;&#xA;&lt;p&gt;In this update, an API for defending against CSRF (Cross Site Request Forgery) has been added to the net/http package of the standard library. This API is maintained by Filippo Valsorda, the Go language password package maintainer（ &lt;a href=&#34;https://filippo.io&#34;&gt;https://filippo.io&lt;/a&gt; ）Proposed and added to the standard library, he is a cryptographer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Not Use TLS to Connect to the Database Instead of WireGuard?</title>
      <link>https://qiulaidongfeng.github.io/en/why-not-use-tls-to-connect-to-the-database-instead-of-wireguard/</link>
      <pubDate>Thu, 16 Oct 2025 11:59:13 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/why-not-use-tls-to-connect-to-the-database-instead-of-wireguard/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;p&gt;This is the second blog post in the &lt;a href=&#34;https://qiulaidongfeng.github.io/categories/%E6%88%91%E7%9A%84%E9%AB%98%E5%90%9E%E5%90%90http2%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E7%B3%BB%E5%88%97/&#34;&gt;&amp;ldquo;My Experience Sharing Series on High Throughput http2 Server Optimization&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The previous blog mentioned not using TLS to connect to the database and instead using WireGuard. This article provides a detailed explanation of why this is the case.&lt;/p&gt;&#xA;&lt;h2 id=&#34;number-of-configurations&#34;&gt;Number of configurations&lt;/h2&gt;&#xA;&lt;p&gt;TLS works at the application layer, while WireGuard works at the network layer, resulting in configuration differences.&lt;/p&gt;&#xA;&lt;p&gt;At the application layer, it means that each database instance needs to modify the configuration file to configure it, while at the network layer, it means that only the database needs to be configured on the host.&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么不要使用TLS连接数据库，而用WireGuard替代？</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8tls%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%80%8C%E7%94%A8wireguard%E6%9B%BF%E4%BB%A3/</link>
      <pubDate>Wed, 15 Oct 2025 03:37:15 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8tls%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%80%8C%E7%94%A8wireguard%E6%9B%BF%E4%BB%A3/</guid>
      <description>&lt;p&gt;这是&lt;a href=&#34;https://qiulaidongfeng.github.io/categories/%E6%88%91%E7%9A%84%E9%AB%98%E5%90%9E%E5%90%90http2%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E7%B3%BB%E5%88%97/&#34;&gt;我的高吞吐http2服务器优化经验分享系列&lt;/a&gt; 第二篇博客。&lt;/p&gt;&#xA;&lt;p&gt;上一篇博客提到不要使用TLS连接数据库，可以使用WireGuard替代，本文详细介绍为什么这样。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置次数&#34;&gt;配置次数&lt;/h2&gt;&#xA;&lt;p&gt;TLS工作在应用层，WireGuard工作在网络层，造成配置差异。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何做到高可用高吞吐的web服务 | 全栈优化实践</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E9%AB%98%E5%90%9E%E5%90%90%E7%9A%84web%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 24 Sep 2025 19:40:58 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E9%AB%98%E5%90%9E%E5%90%90%E7%9A%84web%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;这是&lt;a href=&#34;https://qiulaidongfeng.github.io/categories/%E6%88%91%E7%9A%84%E9%AB%98%E5%90%9E%E5%90%90http2%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BC%98%E5%8C%96%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB%E7%B3%BB%E5%88%97/&#34;&gt;我的高吞吐http2服务器优化经验分享系列&lt;/a&gt; 第一篇博客。&lt;/p&gt;&#xA;&lt;p&gt;本文分享笔者一些搭建web服务时，做到高可用且高吞吐的经验。&lt;/p&gt;&#xA;&lt;h2 id=&#34;硬件角度&#34;&gt;硬件角度&lt;/h2&gt;&#xA;&lt;h3 id=&#34;服务器&#34;&gt;服务器&lt;/h3&gt;&#xA;&lt;p&gt;通常，web服务被部署在云服务器上，而且比较可能是在成本较低的vps(虚拟专用服务器)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go1.25的新CSRF（跨站请求伪造）防御API | 构建更安全的互联网</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/go1.25%E7%9A%84%E6%96%B0csrf%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E9%98%B2%E5%BE%A1api-%E6%9E%84%E5%BB%BA%E6%9B%B4%E5%AE%89%E5%85%A8%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91/</link>
      <pubDate>Wed, 20 Aug 2025 23:49:45 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/go1.25%E7%9A%84%E6%96%B0csrf%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E9%98%B2%E5%BE%A1api-%E6%9E%84%E5%BB%BA%E6%9B%B4%E5%AE%89%E5%85%A8%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;Go1.25已经在2025年8月中旬发布。&lt;/p&gt;&#xA;&lt;p&gt;此次更新中在标准库的net/http包中增加了防御CSRF（跨站请求伪造）的API。此API由Go语言密码包维护者&lt;a href=&#34;https://filippo.io&#34;&gt;Filippo Valsorda&lt;/a&gt;提出并添加进标准库，他是密码学家。&lt;/p&gt;</description>
    </item>
    <item>
      <title>一个SEO优化的网页结构模板 | 打造搜索引擎友好的网站基础</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%80%E4%B8%AAseo%E4%BC%98%E5%8C%96%E7%9A%84%E7%BD%91%E9%A1%B5%E7%BB%93%E6%9E%84%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Wed, 20 Aug 2025 13:23:46 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%80%E4%B8%AAseo%E4%BC%98%E5%8C%96%E7%9A%84%E7%BD%91%E9%A1%B5%E7%BB%93%E6%9E%84%E6%A8%A1%E6%9D%BF/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;搜索引擎（如&lt;a href=&#34;https://cn.bing.com&#34;&gt;必应&lt;/a&gt;、谷歌）至关重要，关乎在用户能否找到自己的网站。一个经过SEO优化（搜索引擎优化）的网页，更容易被用户找到。&lt;/p&gt;&#xA;&lt;p&gt;此博客分享一个SEO优化的网页结构模板。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一些要点&#34;&gt;一些要点&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tdk标题描述关键词&#34;&gt;TDK（标题、描述、关键词）&lt;/h3&gt;&#xA;&lt;p&gt;title（标题），description（描述），keywords（关键词）是关于一个网页被搜索引擎的三要素。&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Experience With Cloudflare Argo Smart Routing   Greatly Improving Access Speed in Chinese Mainland</title>
      <link>https://qiulaidongfeng.github.io/en/my-experience-with-cloudflare-argo-smart-routing---greatly-improving-access-speed-in-chinese-mainland/</link>
      <pubDate>Thu, 14 Aug 2025 00:50:12 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/my-experience-with-cloudflare-argo-smart-routing---greatly-improving-access-speed-in-chinese-mainland/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;Cloudflare&amp;rsquo;s free plan provides unlimited CDN, DDoS protection, and a 15 year source server TLS certificate, among other useful services, which are very helpful for building websites.&lt;/p&gt;&#xA;&lt;p&gt;This cannot use nodes located in Chinese Mainland. All data is transferred from overseas (outside Chinese Mainland) to Chinese Mainland. According to their sales staff, only nodes with less than 20% Cloudflare can be used.&lt;/p&gt;&#xA;&lt;p&gt;After using the free plan, it may take nearly 50 seconds to load the website when you visit the website through http3 at night in Chinese Mainland.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Personal Guide to Choosing VPS (Virtual Private Server)</title>
      <link>https://qiulaidongfeng.github.io/en/personal-guide-to-choosing-vps-virtual-private-server/</link>
      <pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/personal-guide-to-choosing-vps-virtual-private-server/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;&#xA;&lt;p&gt;VPS (Virtual Private Server) is based on virtualization technology, which divides a physical server into multiple virtual servers, allowing users to obtain servers at a lower cost.&#xA;This guide is intended for personal use, such as learning and research, lightweight websites (personal blogs), etc. But other uses, such as commercial websites, also have reference value.&lt;/p&gt;&#xA;&lt;h2 id=&#34;when-should-i-choose-vps&#34;&gt;When should I choose VPS&lt;/h2&gt;&#xA;&lt;p&gt;Building a website or building a self built cloud storage and other &lt;strong&gt;web-based services&lt;/strong&gt; requires a computer that runs stably (around 7x24 hours on), a stable upstream bandwidth network connection, and a public IP address.&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的Cloudflare Argo Smart Routing使用体验 - 大幅提升中国大陆访问速度</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E6%88%91%E7%9A%84cloudflare-argo-smart-routing%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C-%E5%A4%A7%E5%B9%85%E6%8F%90%E5%8D%87%E5%A4%9C%E9%97%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/</link>
      <pubDate>Tue, 12 Aug 2025 02:02:00 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E6%88%91%E7%9A%84cloudflare-argo-smart-routing%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C-%E5%A4%A7%E5%B9%85%E6%8F%90%E5%8D%87%E5%A4%9C%E9%97%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;Cloudflare的免费计划提供了无限量的CDN，DDoS防护以及15年的源服务器tls证书，等很有用的服务，对建网站很有帮助。&lt;/p&gt;&#xA;&lt;p&gt;这不能使用位于中国大陆的节点，所有数据均从境外（中国大陆以外）传输到中国大陆，且根据它们销售人员的说法，只能使用Cloudflare不到20%的节点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>个人选购vps(虚拟专用服务器)指南</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%AA%E4%BA%BA%E9%80%89%E8%B4%ADvps%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 28 Jul 2025 17:21:25 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E4%B8%AA%E4%BA%BA%E9%80%89%E8%B4%ADvps%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;vps(虚拟专用服务器)是基于虚拟化技术，将一台物理服务器，分为多个虚拟服务器，使得用户能以更低的成本获得服务器。&lt;/p&gt;&#xA;&lt;p&gt;本指南面向个人用途，如学习研究，轻量级网站（个人博客）等。但其他用途，如商业网站也有参考价值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Measure the Speed Difference Between Http2 and Http3</title>
      <link>https://qiulaidongfeng.github.io/en/measure-the-speed-difference-between-http2-and-http3/</link>
      <pubDate>Fri, 27 Jun 2025 12:48:30 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/measure-the-speed-difference-between-http2-and-http3/</guid>
      <description>&lt;p&gt;Software translation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;Http3 is the latest version of the HTTP protocol, which has undergone a significant improvement by using the QUIC (Fast UDP Network Connection) protocol at the transport layer to enhance performance, especially in high packet loss networks.&lt;/p&gt;&#xA;&lt;p&gt;Http3 will be officially standardized in 2022, and currently mainstream programming language standard libraries do not support http3.&lt;/p&gt;&#xA;&lt;p&gt;Due to the open-source libraries github.com/quic-go/quic-go/http3 available in the Go language, it is easy to build http3 clients and servers, making it easier to measure the speed difference between http2 and http3.&lt;/p&gt;</description>
    </item>
    <item>
      <title>测量http2和http3的速度差异</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E6%B5%8B%E8%AF%95http2%E5%92%8Chttp3%E7%9A%84%E9%80%9F%E5%BA%A6%E5%B7%AE%E5%BC%82/</link>
      <pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E6%B5%8B%E8%AF%95http2%E5%92%8Chttp3%E7%9A%84%E9%80%9F%E5%BA%A6%E5%B7%AE%E5%BC%82/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;http3是http协议的最新版本，进行了一项重大改进，传输层改用QUIC（快速UDP网络连接）协议，以提高性能，特别是在高丢包网络的性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go1.25 is worth paying attention to</title>
      <link>https://qiulaidongfeng.github.io/en/go1.25-is-worth-paying-attention-to/</link>
      <pubDate>Sat, 31 May 2025 20:57:51 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/go1.25-is-worth-paying-attention-to/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;p&gt;The development cycle of go1.25 has entered a release freeze, and generally there will be no new features. Currently, the author believes that the following are worth paying attention to:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GOMAXPROCS now considers CPU limitations when running on containers, which is very useful when Go programs run on containers such as Kubernetes.&lt;/li&gt;&#xA;&lt;li&gt;There is now a new garbage collector as an experiment, which sets the environment variable GOEXPERIMENT=greenteagc to be enabled during construction, which improves performance in certain scenarios.&lt;/li&gt;&#xA;&lt;li&gt;Now for the value recovered after the panic, the value will not be printed repeatedly, which avoids the final output of the panic including duplicate content during testing.&lt;/li&gt;&#xA;&lt;li&gt;The experimental package testing/synctest has been completed and turned positive. Like other standard library packages, it guarantees backward compatibility according to the go1 compatibility commitment, providing support for testing concurrent code.&lt;/li&gt;&#xA;&lt;li&gt;The compiler now uses DWARF version 5 to generate debugging information, which reduces the size of binary files generated during compilation.&lt;/li&gt;&#xA;&lt;li&gt;The net/http package has added an API to prevent cross site forgery attacks (CSRF).&lt;/li&gt;&#xA;&lt;li&gt;Set the environment variable GOEXPERIMENT=jsonv2 during construction to experience the v2 version of the JSON package being used.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Go1.25值得关注的</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/go1.25%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84/</link>
      <pubDate>Sat, 31 May 2025 20:57:51 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/go1.25%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8%E7%9A%84/</guid>
      <description>&lt;p&gt;go1.25开发周期已经进入发布冻结，一般情况不再会有新功能，目前笔者认为有以下值得关注的：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GOMAXPROCS现在会考虑运行在容器时的CPU限制，这在Go程序运行于Kubernetes等容器时非常有用。&lt;/li&gt;&#xA;&lt;li&gt;现在有一个新的垃圾收集器作为实验，在构建时设置环境变量GOEXPERIMENT=greenteagc启用，这在某些场景下提高了性能。&lt;/li&gt;&#xA;&lt;li&gt;现在对于panic后recover再panic的value，不会重复打印value，这避免了测试时panic最终输出包括重复内容。&lt;/li&gt;&#xA;&lt;li&gt;实验性包testing/synctest已经结束实验转正，像其他标准库的包一样按照go1兼容性承诺保证向后兼容，它为测试并发代码提供了支持。&lt;/li&gt;&#xA;&lt;li&gt;编译器现在使用DWARF version 5生成调试信息，这减少了编译生成二进制文件的大小。&lt;/li&gt;&#xA;&lt;li&gt;net/http包增加了防范跨站点伪造攻击（CSRF）的API。&lt;/li&gt;&#xA;&lt;li&gt;构建时设置环境变量GOEXPERIMENT=jsonv2，可以体验正在使用的json包的v2版本。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>我使用Cloudflare免费计划的经验</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E6%88%91%E4%BD%BF%E7%94%A8cloudflare%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92%E7%9A%84%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Mon, 12 May 2025 11:28:49 +0800</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E6%88%91%E4%BD%BF%E7%94%A8cloudflare%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92%E7%9A%84%E7%BB%8F%E9%AA%8C/</guid>
      <description>&lt;h2 id=&#34;cloudflare简介&#34;&gt;Cloudflare简介&lt;/h2&gt;&#xA;&lt;p&gt;Cloudflare是一家2009年成立于美国的企业，初衷是保护网络安全，目前在 330 多个城市拥有数据中心，与大约 95% 的全球互联网用户距离仅约 50 毫秒，凭借 388 Tbps 的网络容量，成功缓解了一些有史以来最大规模的 DDoS 攻击。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于我</title>
      <link>https://qiulaidongfeng.github.io/about/</link>
      <pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/about/</guid>
      <description>&lt;h1 class=&#34;text-center&#34;&gt;关于我&lt;/h1&gt;&#xA;&lt;section class=&#34;mt-4 p-4 card&#34;&gt;&#xA;    &lt;h2&gt;简介：&lt;/h2&gt;&#xA;    &lt;p&gt;一位Go语言程序员，专业的软件设计师。&lt;/p&gt;&#xA;    &lt;p&gt;我给Go语言贡献过很多代码，推动了多项Go语言的提案前进，是go-assigness组成员，有Go语言的may-start-trybots权限。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用redis构建聊天室</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E7%94%A8redis%E6%9E%84%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4/</link>
      <pubDate>Mon, 21 Apr 2025 10:15:12 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E7%94%A8redis%E6%9E%84%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4/</guid>
      <description>&lt;p&gt;此博客记录我用redis构建聊天室的一个方案。&lt;/p&gt;&#xA;&lt;p&gt;首先，要实现的功能是聊天室可以被多个用户进入，在里面互相发消息聊天，能显示在线id数，聊天室会在一段时间没人发消息后自动删除。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据库配置tls的几个坑点</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AEtls%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91%E7%82%B9/</link>
      <pubDate>Wed, 19 Mar 2025 19:22:51 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AEtls%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9D%91%E7%82%B9/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;用docker安装的redis，配置tls时，许多网上相关的内容都是讲的生成证书和改redis配置文件的tls部分，但是没讲如果docker安装在wsl2，还要修改redis配置文件的bind为0.0.0.0。&lt;/li&gt;&#xA;&lt;li&gt;mongodb不支持tls1.3。&lt;/li&gt;&#xA;&lt;li&gt;mongodb和redis默认在启用tls时启用客户端证书验证，意味着默认只配置服务端证书验证还不能用tls连接mongodb和redis。&lt;/li&gt;&#xA;&lt;li&gt;一些网上讲用openssl自建ca签发tls证书的内容没有讲到证书SAN信息要包含服务端的域名或IP，不包含的话服务端使用这样的证书，客户端连接时会产生这样的错误Hostname/IP does not match certificate&amp;rsquo;s altnames: IP: 127.0.0.1 is not in the cert&amp;rsquo;s list:&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>在go标准库外实现比go标准库更好的arena</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E5%9C%A8go%E6%A0%87%E5%87%86%E5%BA%93%E5%A4%96%E5%AE%9E%E7%8E%B0%E6%AF%94%E6%A0%87%E5%87%86%E5%BA%93%E6%9B%B4%E5%A5%BD%E7%9A%84arena/</link>
      <pubDate>Wed, 12 Feb 2025 03:36:31 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E5%9C%A8go%E6%A0%87%E5%87%86%E5%BA%93%E5%A4%96%E5%AE%9E%E7%8E%B0%E6%AF%94%E6%A0%87%E5%87%86%E5%BA%93%E6%9B%B4%E5%A5%BD%E7%9A%84arena/</guid>
      <description>&lt;p&gt;此博客介绍笔者是如何在go标准库外实现比go标准库更好的arena。&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;arena是一种内存管理方法，从中分配的内存可以被同时释放，适合在一组object的生命周期相同或相近的场景使用，以减少垃圾收集开销。&lt;/p&gt;</description>
    </item>
    <item>
      <title>go语言tls1.3密码套件修改研究</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/go%E8%AF%AD%E8%A8%80tls1.3%E5%AF%86%E7%A0%81%E5%A5%97%E4%BB%B6%E4%BF%AE%E6%94%B9%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Tue, 11 Feb 2025 20:00:46 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/go%E8%AF%AD%E8%A8%80tls1.3%E5%AF%86%E7%A0%81%E5%A5%97%E4%BB%B6%E4%BF%AE%E6%94%B9%E7%A0%94%E7%A9%B6/</guid>
      <description>&lt;p&gt;有些浏览器可以看到tls的一些信息，例如&#xA;&lt;img src=&#34;https://qiulaidongfeng.github.io/images/s.jpg&#34; alt=&#34;&#34;&gt;&#xA;笔者看到go语言默认用的aes128,其他tls1.3实现有默认用aes256的。&lt;/p&gt;&#xA;&lt;p&gt;go语言的tls默认tls1.3使用下列密码套件按下列顺序&#xA;TLS_AES_128_GCM_SHA256,&#xA;TLS_AES_256_GCM_SHA384,&#xA;TLS_CHACHA20_POLY1305_SHA256&#xA;并且文档中明确列出TLS 1.3 ciphersuites are not configurable(TLS 1.3密码套件是不可配置的)&lt;/p&gt;</description>
    </item>
    <item>
      <title>用原子指针+互斥锁实现仅写时加锁</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E7%94%A8%E5%8E%9F%E5%AD%90%E6%8C%87%E9%92%88+%E4%BA%92%E6%96%A5%E9%94%81%E5%AE%9E%E7%8E%B0%E4%BB%85%E5%86%99%E6%97%B6%E5%8A%A0%E9%94%81/</link>
      <pubDate>Tue, 17 Dec 2024 20:00:37 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E7%94%A8%E5%8E%9F%E5%AD%90%E6%8C%87%E9%92%88+%E4%BA%92%E6%96%A5%E9%94%81%E5%AE%9E%E7%8E%B0%E4%BB%85%E5%86%99%E6%97%B6%E5%8A%A0%E9%94%81/</guid>
      <description>&lt;p&gt;此博客介绍我写&lt;a href=&#34;https://github.com/qiulaidongfeng/arena&#34;&gt;arena&lt;/a&gt;的一个经验。&lt;/p&gt;&#xA;&lt;p&gt;通常在访问共享资源时，简单的加互斥锁就够用，在读多写少时使用读写锁优化性能，在写&lt;a href=&#34;https://github.com/qiulaidongfeng/arena&#34;&gt;arena&lt;/a&gt;等场景，为了极致的性能，需要别的方法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;回顾一些知识说明为什么互斥锁和读写锁不适合用在需要极致性能时&#34;&gt;回顾一些知识，说明为什么互斥锁和读写锁不适合用在需要极致性能时。&lt;/h2&gt;&#xA;&lt;p&gt;为什么访问共享资源时需要加锁，因为如果不加锁，多个线程可能看到正在进行操作的中间状态，并基于此中间状态执行它自己的一些操作，导致错误结果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>go1.24rc1发布</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/go1-24rc1%E5%8F%91%E5%B8%83/</link>
      <pubDate>Mon, 16 Dec 2024 22:46:29 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/go1-24rc1%E5%8F%91%E5%B8%83/</guid>
      <description>&lt;p&gt;go1.24rc1已经发布，值得注意的是&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;抗量子密钥交换（crypto/mlkem）&lt;/li&gt;&#xA;&lt;li&gt;弱指针&lt;/li&gt;&#xA;&lt;li&gt;通用哈希函数（我写的实现）&lt;/li&gt;&#xA;&lt;li&gt;泛型类型别名&lt;/li&gt;&#xA;&lt;li&gt;更快的终结器&lt;/li&gt;&#xA;&lt;li&gt;CPU开销平均降低2-3%，改进包括新的map内置实现，更高效的小object内存分配，新的运行时内部互斥实现&lt;/li&gt;&#xA;&lt;li&gt;实验性包testing/synctest用来测试并发代码&lt;/li&gt;&#xA;&lt;li&gt;sync.Map的新实现，提高了性能&lt;/li&gt;&#xA;&lt;li&gt;os.Root用来在特定目录执行文件系统操作&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>How does the metrics package record the number of non default behavior occurrences</title>
      <link>https://qiulaidongfeng.github.io/en/howdoesthemetricspackagerecordthenumberofnondefaultbehavioroccurrences-md/</link>
      <pubDate>Thu, 06 Apr 2023 14:19:16 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/howdoesthemetricspackagerecordthenumberofnondefaultbehavioroccurrences-md/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-does-the-metrics-package-record-the-number-of-non-default-behavior-occurrences&#34;&gt;How does the metrics package record the number of non default behavior occurrences&lt;/h2&gt;&#xA;&lt;p&gt;Go1.21 is currently under development, &lt;a href=&#34;https://tip.golang.org/doc/go1.21&#34;&gt;draft release note&lt;/a&gt;It is mentioned that it is expected to be released in August 2023.&lt;/p&gt;&#xA;&lt;p&gt;In the development branch of &lt;a href=&#34;https://github.com/golang/go&#34;&gt;go1.21&lt;/a&gt; In, &lt;a href=&#34;https://pkg.go.dev/runtime/metrics@master&#34;&gt;metrics&lt;/a&gt;  package, a series of indicators in the format /godebug/non-default-behavior/(godebug-name):events ,(godebug name) is a series of key value pairs for GODEBUG environment variables, and the names of certain keys, such as the execerrdot introduced in go1.19 (hereinafter referred to as &lt;strong&gt;godebug indicator&lt;/strong&gt;). &lt;strong&gt;Through these newly added indicators, the number of non default behavior occurrences caused by setting these environmental variables can be obtained.&lt;/strong&gt; This article analyzes how this is achieved by studying the source code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>metrics包如何记录非默认行为发生次数</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/metrics%E5%8C%85%E5%A6%82%E4%BD%95%E8%AE%B0%E5%BD%95%E9%9D%9E%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA%E5%8F%91%E7%94%9F%E6%AC%A1%E6%95%B0-md/</link>
      <pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/metrics%E5%8C%85%E5%A6%82%E4%BD%95%E8%AE%B0%E5%BD%95%E9%9D%9E%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA%E5%8F%91%E7%94%9F%E6%AC%A1%E6%95%B0-md/</guid>
      <description>&lt;h2 id=&#34;metrics包如何记录非默认行为发生次数&#34;&gt;metrics包如何记录非默认行为发生次数&lt;/h2&gt;&#xA;&lt;p&gt;go1.21正在开发中，&lt;a href=&#34;https://tip.golang.org/doc/go1.21&#34;&gt;发行说明草案&lt;/a&gt; 提到预计2023年8月发布。&lt;/p&gt;&#xA;&lt;p&gt;在go1.21的&lt;a href=&#34;https://github.com/golang/go&#34;&gt;开发分支&lt;/a&gt;中，&lt;a href=&#34;https://pkg.go.dev/runtime/metrics@master&#34;&gt;metrics&lt;/a&gt; 包中，新增了一系列格式如同 /godebug/non-default-behavior/(godebug-name):events的指标，(godebug-name)是GODEBUG环境变量的一系列键值对，某些键的名称，比如go1.19引入的execerrdot（以下简称&lt;strong&gt;godebug指标&lt;/strong&gt;）。通过这些新增的指标，可以获取&lt;strong&gt;因为设置了这些环境变量导致非默认行为发生次数的数量&lt;/strong&gt;，本文通过研究源代码来分析这是如何实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiplication_or_dereference</title>
      <link>https://qiulaidongfeng.github.io/en/multiplication-or-dereference-md/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/multiplication-or-dereference-md/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;p&gt;In the &lt;a href=&#34;https://gitee.com/u-language/u-language&#34;&gt;U Language Project&lt;/a&gt; A separator based lexical analyzer is implemented in the &lt;a href=&#34;https://gitee.com/u-language/u-language/blob/master/pkg/lex/README.md&#34;&gt;Lexical Analyzer Design Document&lt;/a&gt; &amp;ldquo;The current * will be parsed as a multiplication sign, and when there is no pointer, there is no problem.&amp;rdquo;. Now we are ready to add pointers to this project. If you use * to dereference as in other languages, there are two options&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When constructing an abstract syntax tree, handle ambiguity where * can be both a multiplication sign and a dereference&lt;/p&gt;</description>
    </item>
    <item>
      <title>乘法还是解引用</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/%E4%B9%98%E6%B3%95%E8%BF%98%E6%98%AF%E8%A7%A3%E5%BC%95%E7%94%A8-md/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/%E4%B9%98%E6%B3%95%E8%BF%98%E6%98%AF%E8%A7%A3%E5%BC%95%E7%94%A8-md/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;https://gitee.com/u-language/u-language&#34;&gt;U语言项目&lt;/a&gt; 中 ，实现了一个基于分隔符的词法分析器，文档在 &lt;a href=&#34;https://gitee.com/u-language/u-language/blob/master/pkg/lex/README.md&#34;&gt;词法分析器设计文档&lt;/a&gt; ，当前 * 将被分析为乘号，在没有指针时，这样没有问题。现在准备给这个项目增加指针，如果按其他语言一样使用 * 解引用，有两种方案&lt;/p&gt;</description>
    </item>
    <item>
      <title>mmap_error</title>
      <link>https://qiulaidongfeng.github.io/en/mmap-error/</link>
      <pubDate>Thu, 02 Mar 2023 21:00:49 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/mmap-error/</guid>
      <description>&lt;p&gt;Software translation&lt;/p&gt;&#xA;&lt;h2 id=&#34;windows-allows-handling-exception-page-errors&#34;&gt;Windows allows handling exception page errors&lt;/h2&gt;&#xA;&lt;p&gt;Go1.21 is under development, &lt;a href=&#34;https://tip.golang.org/doc/go1.21&#34;&gt;draft release note&lt;/a&gt; Mention that it is expected to be released in August 2023&lt;/p&gt;&#xA;&lt;p&gt;According to the submitted information &lt;a href=&#34;https://github.com/golang/go/commit/e03ee85ef434f307500a71927dfb3e876161847a&#34;&gt;runtime: Allow handling of EXCEPTION_IN_PAGE_ERROR&lt;/a&gt; Go1.21 allows you to handle the access failure of the memory-mapped file through debug.SetPanicOnFault in Windows (for example, the drive where the memory-mapped file is located is ejected)&lt;/p&gt;&#xA;&lt;p&gt;For example, it comes from &lt;a href=&#34;https://github.com/golang/go/issues/58457&#34;&gt;golang/go#58457&lt;/a&gt; Example of&lt;/p&gt;&#xA;&lt;p&gt;Memory mapping files on external disks (using CreateFileMapping/MapViewOfFile)&#xA;Call debug. SetPanicOnFault (true)&#xA;Eject external disk&#xA;Attempt to read from memory map&#xA;What do you see?&#xA;The runtime faults (Exception 0xc0000006 0x0 &amp;hellip;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>mmap错误</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/mmap%E9%94%99%E8%AF%AF/</link>
      <pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/mmap%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;h1 id=&#34;go121前瞻&#34;&gt;go1.21前瞻&lt;/h1&gt;&#xA;&lt;h2 id=&#34;windows允许处理异常页面错误&#34;&gt;windows允许处理异常页面错误&lt;/h2&gt;&#xA;&lt;p&gt;go1.21正在开发中，&lt;a href=&#34;https://tip.golang.org/doc/go1.21&#34;&gt;发行说明草案&lt;/a&gt; 提到预计2023年8月发布&lt;/p&gt;&#xA;&lt;p&gt;根据提交信息 &lt;a href=&#34;https://github.com/golang/go/commit/e03ee85ef434f307500a71927dfb3e876161847a&#34;&gt;runtime: Allow handling of EXCEPTION_IN_PAGE_ERROR&lt;/a&gt; go1.21允许在windows通过debug.SetPanicOnFault 处理内存映射文件的访问故障（例如，内存映射文件所在的驱动器被弹出）&lt;/p&gt;</description>
    </item>
    <item>
      <title>First blog</title>
      <link>https://qiulaidongfeng.github.io/en/one/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/en/one/</guid>
      <description>&lt;p&gt;Software translation&#xA;On March 1, 2023, I published this blog&lt;/p&gt;</description>
    </item>
    <item>
      <title>第一个博客</title>
      <link>https://qiulaidongfeng.github.io/zh-cn/one/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      <author>秋来冬风</author>
      <guid>https://qiulaidongfeng.github.io/zh-cn/one/</guid>
      <description>&lt;p&gt;2023年3月1日，我公开了这个博客&lt;/p&gt;</description>
    </item>
  </channel>
</rss>